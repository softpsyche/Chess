// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Arcesoft.Chess.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class MatchFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "Match.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Match", "\tValidate match behavior", ProgrammingLanguage.CSharp, new string[] {
                        "Unit"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Match")))
            {
                global::Arcesoft.Chess.Tests.MatchFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 16
#line 17
 testRunner.Given("I have a container", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.Given("I have a game factory", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Load match should load famous game Fischer V Spassky 1972")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Match")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        public virtual void LoadMatchShouldLoadFamousGameFischerVSpassky1972()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Load match should load famous game Fischer V Spassky 1972", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line 16
this.FeatureBackground();
#line 24
 testRunner.Given("I have a match factory", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 25
 testRunner.When("I load the match \'fischer_spassky_1972.pgn\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.Then("I expect the gamestate to be \'InPlay\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Source",
                        "Destination",
                        "CapturedPiece",
                        "SpecialMoveType"});
            table1.AddRow(new string[] {
                        "C2",
                        "C4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "E7",
                        "E6",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "G1",
                        "F3",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "D7",
                        "D5",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "D2",
                        "D4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "G8",
                        "F6",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "B1",
                        "C3",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "F8",
                        "E7",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "C1",
                        "G5",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "E8",
                        "G8",
                        "",
                        "CastleKingside"});
            table1.AddRow(new string[] {
                        "E2",
                        "E3",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "H7",
                        "H6",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "G5",
                        "H4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "B7",
                        "B6",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "C4",
                        "D5",
                        "BlackPawn",
                        ""});
            table1.AddRow(new string[] {
                        "F6",
                        "D5",
                        "WhitePawn",
                        ""});
            table1.AddRow(new string[] {
                        "H4",
                        "E7",
                        "BlackBishop",
                        ""});
            table1.AddRow(new string[] {
                        "D8",
                        "E7",
                        "WhiteBishop",
                        ""});
            table1.AddRow(new string[] {
                        "C3",
                        "D5",
                        "BlackKnight",
                        ""});
            table1.AddRow(new string[] {
                        "E6",
                        "D5",
                        "WhiteKnight",
                        ""});
            table1.AddRow(new string[] {
                        "A1",
                        "C1",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "C8",
                        "E6",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "D1",
                        "A4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "C7",
                        "C5",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "A4",
                        "A3",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "F8",
                        "C8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "F1",
                        "B5",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "A7",
                        "A6",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "D4",
                        "C5",
                        "BlackPawn",
                        ""});
            table1.AddRow(new string[] {
                        "B6",
                        "C5",
                        "WhitePawn",
                        ""});
            table1.AddRow(new string[] {
                        "E1",
                        "G1",
                        "",
                        "CastleKingside"});
            table1.AddRow(new string[] {
                        "A8",
                        "A7",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "B5",
                        "E2",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "B8",
                        "D7",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "F3",
                        "D4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "E7",
                        "F8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "D4",
                        "E6",
                        "BlackBishop",
                        ""});
            table1.AddRow(new string[] {
                        "F7",
                        "E6",
                        "WhiteKnight",
                        ""});
            table1.AddRow(new string[] {
                        "E3",
                        "E4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "D5",
                        "D4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "F2",
                        "F4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "F8",
                        "E7",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "E4",
                        "E5",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "C8",
                        "B8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "E2",
                        "C4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "G8",
                        "H8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "A3",
                        "H3",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "D7",
                        "F8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "B2",
                        "B3",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "A6",
                        "A5",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "F4",
                        "F5",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "E6",
                        "F5",
                        "WhitePawn",
                        ""});
            table1.AddRow(new string[] {
                        "F1",
                        "F5",
                        "BlackPawn",
                        ""});
            table1.AddRow(new string[] {
                        "F8",
                        "H7",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "C1",
                        "F1",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "E7",
                        "D8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "H3",
                        "G3",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "A7",
                        "E7",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "H2",
                        "H4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "B8",
                        "B7",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "E5",
                        "E6",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "B7",
                        "C7",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "G3",
                        "E5",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "D8",
                        "E8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "A2",
                        "A4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "E8",
                        "D8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "F1",
                        "F2",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "D8",
                        "E8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "F2",
                        "F3",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "E8",
                        "D8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "C4",
                        "D3",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "D8",
                        "E8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "E5",
                        "E4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "H7",
                        "F6",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "F5",
                        "F6",
                        "BlackKnight",
                        ""});
            table1.AddRow(new string[] {
                        "G7",
                        "F6",
                        "WhiteRook",
                        ""});
            table1.AddRow(new string[] {
                        "F3",
                        "F6",
                        "BlackPawn",
                        ""});
            table1.AddRow(new string[] {
                        "H8",
                        "G8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "D3",
                        "C4",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "G8",
                        "H8",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "E4",
                        "F4",
                        "",
                        ""});
#line 27
 testRunner.Then("I expect the following move history", ((string)(null)), table1, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "A",
                        "B",
                        "C",
                        "D",
                        "E",
                        "F",
                        "G",
                        "H"});
            table2.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "BQ",
                        "",
                        "",
                        "BK"});
            table2.AddRow(new string[] {
                        "",
                        "",
                        "BR",
                        "",
                        "BR",
                        "",
                        "",
                        ""});
            table2.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "WP",
                        "WR",
                        "",
                        "BP"});
            table2.AddRow(new string[] {
                        "BP",
                        "",
                        "BP",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2.AddRow(new string[] {
                        "WP",
                        "",
                        "WB",
                        "BP",
                        "",
                        "WQ",
                        "",
                        "WP"});
            table2.AddRow(new string[] {
                        "",
                        "WP",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "WP",
                        ""});
            table2.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "WK",
                        ""});
#line 110
 testRunner.Then("I expect the current board to contain the following", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Load match should load famous game Kasparov V Topalov 1999")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Match")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        public virtual void LoadMatchShouldLoadFamousGameKasparovVTopalov1999()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Load match should load famous game Kasparov V Topalov 1999", ((string[])(null)));
#line 121
this.ScenarioSetup(scenarioInfo);
#line 16
this.FeatureBackground();
#line 122
 testRunner.Given("I have a match factory", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 123
 testRunner.When("I load the match \'kasparov_topalov_1999.pgn\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
 testRunner.Then("I expect the gamestate to be \'InPlay\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Source",
                        "Destination",
                        "Type"});
            table3.AddRow(new string[] {
                        "E2",
                        "E4",
                        "Move"});
            table3.AddRow(new string[] {
                        "D7",
                        "D6",
                        "Move"});
            table3.AddRow(new string[] {
                        "D2",
                        "D4",
                        "Move"});
            table3.AddRow(new string[] {
                        "G8",
                        "F6",
                        "Move"});
            table3.AddRow(new string[] {
                        "B1",
                        "C3",
                        "Move"});
            table3.AddRow(new string[] {
                        "G7",
                        "G6",
                        "Move"});
            table3.AddRow(new string[] {
                        "C1",
                        "E3",
                        "Move"});
            table3.AddRow(new string[] {
                        "F8",
                        "G7",
                        "Move"});
            table3.AddRow(new string[] {
                        "D1",
                        "D2",
                        "Move"});
            table3.AddRow(new string[] {
                        "C7",
                        "C6",
                        "Move"});
            table3.AddRow(new string[] {
                        "F2",
                        "F3",
                        "Move"});
            table3.AddRow(new string[] {
                        "B7",
                        "B5",
                        "Move"});
            table3.AddRow(new string[] {
                        "G1",
                        "E2",
                        "Move"});
            table3.AddRow(new string[] {
                        "B8",
                        "D7",
                        "Move"});
            table3.AddRow(new string[] {
                        "E3",
                        "H6",
                        "Move"});
            table3.AddRow(new string[] {
                        "G7",
                        "H6",
                        "CaptureBishop"});
            table3.AddRow(new string[] {
                        "D2",
                        "H6",
                        "CaptureBishop"});
            table3.AddRow(new string[] {
                        "C8",
                        "B7",
                        "Move"});
            table3.AddRow(new string[] {
                        "A2",
                        "A3",
                        "Move"});
            table3.AddRow(new string[] {
                        "E7",
                        "E5",
                        "Move"});
            table3.AddRow(new string[] {
                        "E1",
                        "C1",
                        "CastleQueenside"});
            table3.AddRow(new string[] {
                        "D8",
                        "E7",
                        "Move"});
            table3.AddRow(new string[] {
                        "C1",
                        "B1",
                        "Move"});
            table3.AddRow(new string[] {
                        "A7",
                        "A6",
                        "Move"});
            table3.AddRow(new string[] {
                        "E2",
                        "C1",
                        "Move"});
            table3.AddRow(new string[] {
                        "E8",
                        "C8",
                        "CastleQueenside"});
            table3.AddRow(new string[] {
                        "C1",
                        "B3",
                        "Move"});
            table3.AddRow(new string[] {
                        "E5",
                        "D4",
                        "CapturePawn"});
            table3.AddRow(new string[] {
                        "D1",
                        "D4",
                        "CapturePawn"});
            table3.AddRow(new string[] {
                        "C6",
                        "C5",
                        "Move"});
            table3.AddRow(new string[] {
                        "D4",
                        "D1",
                        "Move"});
            table3.AddRow(new string[] {
                        "D7",
                        "B6",
                        "Move"});
            table3.AddRow(new string[] {
                        "G2",
                        "G3",
                        "Move"});
            table3.AddRow(new string[] {
                        "C8",
                        "B8",
                        "Move"});
            table3.AddRow(new string[] {
                        "B3",
                        "A5",
                        "Move"});
            table3.AddRow(new string[] {
                        "B7",
                        "A8",
                        "Move"});
            table3.AddRow(new string[] {
                        "F1",
                        "H3",
                        "Move"});
            table3.AddRow(new string[] {
                        "D6",
                        "D5",
                        "Move"});
            table3.AddRow(new string[] {
                        "H6",
                        "F4",
                        "Move"});
            table3.AddRow(new string[] {
                        "B8",
                        "A7",
                        "Move"});
            table3.AddRow(new string[] {
                        "H1",
                        "E1",
                        "Move"});
            table3.AddRow(new string[] {
                        "D5",
                        "D4",
                        "Move"});
            table3.AddRow(new string[] {
                        "C3",
                        "D5",
                        "Move"});
            table3.AddRow(new string[] {
                        "B6",
                        "D5",
                        "CaptureKnight"});
            table3.AddRow(new string[] {
                        "E4",
                        "D5",
                        "CaptureKnight"});
            table3.AddRow(new string[] {
                        "E7",
                        "D6",
                        "Move"});
            table3.AddRow(new string[] {
                        "D1",
                        "D4",
                        "CapturePawn"});
            table3.AddRow(new string[] {
                        "C5",
                        "D4",
                        "CaptureRook"});
            table3.AddRow(new string[] {
                        "E1",
                        "E7",
                        "Move"});
            table3.AddRow(new string[] {
                        "A7",
                        "B6",
                        "Move"});
            table3.AddRow(new string[] {
                        "F4",
                        "D4",
                        "CapturePawn"});
            table3.AddRow(new string[] {
                        "B6",
                        "A5",
                        "CaptureKnight"});
            table3.AddRow(new string[] {
                        "B2",
                        "B4",
                        "Move"});
            table3.AddRow(new string[] {
                        "A5",
                        "A4",
                        "Move"});
            table3.AddRow(new string[] {
                        "D4",
                        "C3",
                        "Move"});
            table3.AddRow(new string[] {
                        "D6",
                        "D5",
                        "CapturePawn"});
            table3.AddRow(new string[] {
                        "E7",
                        "A7",
                        "Move"});
            table3.AddRow(new string[] {
                        "A8",
                        "B7",
                        "Move"});
            table3.AddRow(new string[] {
                        "A7",
                        "B7",
                        "CaptureBishop"});
            table3.AddRow(new string[] {
                        "D5",
                        "C4",
                        "Move"});
            table3.AddRow(new string[] {
                        "C3",
                        "F6",
                        "CaptureKnight"});
            table3.AddRow(new string[] {
                        "A4",
                        "A3",
                        "CapturePawn"});
            table3.AddRow(new string[] {
                        "F6",
                        "A6",
                        "CapturePawn"});
            table3.AddRow(new string[] {
                        "A3",
                        "B4",
                        "CapturePawn"});
            table3.AddRow(new string[] {
                        "C2",
                        "C3",
                        "Move"});
            table3.AddRow(new string[] {
                        "B4",
                        "C3",
                        "CapturePawn"});
            table3.AddRow(new string[] {
                        "A6",
                        "A1",
                        "Move"});
            table3.AddRow(new string[] {
                        "C3",
                        "D2",
                        "Move"});
            table3.AddRow(new string[] {
                        "A1",
                        "B2",
                        "Move"});
            table3.AddRow(new string[] {
                        "D2",
                        "D1",
                        "Move"});
            table3.AddRow(new string[] {
                        "H3",
                        "F1",
                        "Move"});
            table3.AddRow(new string[] {
                        "D8",
                        "D2",
                        "Move"});
            table3.AddRow(new string[] {
                        "B7",
                        "D7",
                        "Move"});
            table3.AddRow(new string[] {
                        "D2",
                        "D7",
                        "CaptureRook"});
            table3.AddRow(new string[] {
                        "F1",
                        "C4",
                        "CaptureQueen"});
            table3.AddRow(new string[] {
                        "B5",
                        "C4",
                        "CaptureBishop"});
            table3.AddRow(new string[] {
                        "B2",
                        "H8",
                        "CaptureRook"});
            table3.AddRow(new string[] {
                        "D7",
                        "D3",
                        "Move"});
            table3.AddRow(new string[] {
                        "H8",
                        "A8",
                        "Move"});
            table3.AddRow(new string[] {
                        "C4",
                        "C3",
                        "Move"});
            table3.AddRow(new string[] {
                        "A8",
                        "A4",
                        "Move"});
            table3.AddRow(new string[] {
                        "D1",
                        "E1",
                        "Move"});
            table3.AddRow(new string[] {
                        "F3",
                        "F4",
                        "Move"});
            table3.AddRow(new string[] {
                        "F7",
                        "F5",
                        "Move"});
            table3.AddRow(new string[] {
                        "B1",
                        "C1",
                        "Move"});
            table3.AddRow(new string[] {
                        "D3",
                        "D2",
                        "Move"});
            table3.AddRow(new string[] {
                        "A4",
                        "A7",
                        "Move"});
#line 125
 testRunner.Then("I expect the following move history", ((string)(null)), table3, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "A",
                        "B",
                        "C",
                        "D",
                        "E",
                        "F",
                        "G",
                        "H"});
            table4.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table4.AddRow(new string[] {
                        "WQ",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "BP"});
            table4.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "BP",
                        ""});
            table4.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "BP",
                        "",
                        ""});
            table4.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "WP",
                        "",
                        ""});
            table4.AddRow(new string[] {
                        "",
                        "",
                        "BP",
                        "",
                        "",
                        "",
                        "WP",
                        ""});
            table4.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "BR",
                        "",
                        "",
                        "",
                        "WP"});
            table4.AddRow(new string[] {
                        "",
                        "",
                        "WK",
                        "",
                        "BK",
                        "",
                        "",
                        ""});
#line 214
 testRunner.Then("I expect the current board to contain the following", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Load match should load famous game Beliavsky V Nunn 1985")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Match")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        public virtual void LoadMatchShouldLoadFamousGameBeliavskyVNunn1985()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Load match should load famous game Beliavsky V Nunn 1985", ((string[])(null)));
#line 225
this.ScenarioSetup(scenarioInfo);
#line 16
this.FeatureBackground();
#line 226
 testRunner.Given("I have a match factory", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 227
 testRunner.When("I load the match \'beliavsky_nunn_1985.pgn\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 228
 testRunner.Then("I expect the gamestate to be \'InPlay\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Source",
                        "Destination",
                        "Type"});
            table5.AddRow(new string[] {
                        "D2",
                        "D4",
                        "Move"});
            table5.AddRow(new string[] {
                        "G8",
                        "F6",
                        "Move"});
            table5.AddRow(new string[] {
                        "C2",
                        "C4",
                        "Move"});
            table5.AddRow(new string[] {
                        "G7",
                        "G6",
                        "Move"});
            table5.AddRow(new string[] {
                        "B1",
                        "C3",
                        "Move"});
            table5.AddRow(new string[] {
                        "F8",
                        "G7",
                        "Move"});
            table5.AddRow(new string[] {
                        "E2",
                        "E4",
                        "Move"});
            table5.AddRow(new string[] {
                        "D7",
                        "D6",
                        "Move"});
            table5.AddRow(new string[] {
                        "F2",
                        "F3",
                        "Move"});
            table5.AddRow(new string[] {
                        "E8",
                        "G8",
                        "CastleKingside"});
            table5.AddRow(new string[] {
                        "C1",
                        "E3",
                        "Move"});
            table5.AddRow(new string[] {
                        "B8",
                        "D7",
                        "Move"});
            table5.AddRow(new string[] {
                        "D1",
                        "D2",
                        "Move"});
            table5.AddRow(new string[] {
                        "C7",
                        "C5",
                        "Move"});
            table5.AddRow(new string[] {
                        "D4",
                        "D5",
                        "Move"});
            table5.AddRow(new string[] {
                        "D7",
                        "E5",
                        "Move"});
            table5.AddRow(new string[] {
                        "H2",
                        "H3",
                        "Move"});
            table5.AddRow(new string[] {
                        "F6",
                        "H5",
                        "Move"});
            table5.AddRow(new string[] {
                        "E3",
                        "F2",
                        "Move"});
            table5.AddRow(new string[] {
                        "F7",
                        "F5",
                        "Move"});
            table5.AddRow(new string[] {
                        "E4",
                        "F5",
                        "CapturePawn"});
            table5.AddRow(new string[] {
                        "F8",
                        "F5",
                        "CapturePawn"});
            table5.AddRow(new string[] {
                        "G2",
                        "G4",
                        "Move"});
            table5.AddRow(new string[] {
                        "F5",
                        "F3",
                        "CapturePawn"});
            table5.AddRow(new string[] {
                        "G4",
                        "H5",
                        "CaptureKnight"});
            table5.AddRow(new string[] {
                        "D8",
                        "F8",
                        "Move"});
            table5.AddRow(new string[] {
                        "C3",
                        "E4",
                        "Move"});
            table5.AddRow(new string[] {
                        "G7",
                        "H6",
                        "Move"});
            table5.AddRow(new string[] {
                        "D2",
                        "C2",
                        "Move"});
            table5.AddRow(new string[] {
                        "F8",
                        "F4",
                        "Move"});
            table5.AddRow(new string[] {
                        "G1",
                        "E2",
                        "Move"});
            table5.AddRow(new string[] {
                        "F3",
                        "F2",
                        "CaptureBishop"});
            table5.AddRow(new string[] {
                        "E4",
                        "F2",
                        "CaptureRook"});
            table5.AddRow(new string[] {
                        "E5",
                        "F3",
                        "Move"});
            table5.AddRow(new string[] {
                        "E1",
                        "D1",
                        "Move"});
            table5.AddRow(new string[] {
                        "F4",
                        "H4",
                        "Move"});
            table5.AddRow(new string[] {
                        "F2",
                        "D3",
                        "Move"});
            table5.AddRow(new string[] {
                        "C8",
                        "F5",
                        "Move"});
            table5.AddRow(new string[] {
                        "E2",
                        "C1",
                        "Move"});
            table5.AddRow(new string[] {
                        "F3",
                        "D2",
                        "Move"});
            table5.AddRow(new string[] {
                        "H5",
                        "G6",
                        "CapturePawn"});
            table5.AddRow(new string[] {
                        "H7",
                        "G6",
                        "CapturePawn"});
            table5.AddRow(new string[] {
                        "F1",
                        "G2",
                        "Move"});
            table5.AddRow(new string[] {
                        "D2",
                        "C4",
                        "CapturePawn"});
            table5.AddRow(new string[] {
                        "C2",
                        "F2",
                        "Move"});
            table5.AddRow(new string[] {
                        "C4",
                        "E3",
                        "Move"});
            table5.AddRow(new string[] {
                        "D1",
                        "E2",
                        "Move"});
            table5.AddRow(new string[] {
                        "H4",
                        "C4",
                        "Move"});
            table5.AddRow(new string[] {
                        "G2",
                        "F3",
                        "Move"});
            table5.AddRow(new string[] {
                        "A8",
                        "F8",
                        "Move"});
            table5.AddRow(new string[] {
                        "H1",
                        "G1",
                        "Move"});
            table5.AddRow(new string[] {
                        "E3",
                        "C2",
                        "Move"});
            table5.AddRow(new string[] {
                        "E2",
                        "D1",
                        "Move"});
            table5.AddRow(new string[] {
                        "F5",
                        "D3",
                        "CaptureKnight"});
#line 229
 testRunner.Then("I expect the following move history", ((string)(null)), table5, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "A",
                        "B",
                        "C",
                        "D",
                        "E",
                        "F",
                        "G",
                        "H"});
            table6.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "BR",
                        "BK",
                        ""});
            table6.AddRow(new string[] {
                        "BP",
                        "BP",
                        "",
                        "",
                        "BP",
                        "",
                        "",
                        ""});
            table6.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "BP",
                        "",
                        "",
                        "BP",
                        "BB"});
            table6.AddRow(new string[] {
                        "",
                        "",
                        "BP",
                        "WP",
                        "",
                        "",
                        "",
                        ""});
            table6.AddRow(new string[] {
                        "",
                        "",
                        "BQ",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table6.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "BB",
                        "",
                        "WB",
                        "",
                        "WP"});
            table6.AddRow(new string[] {
                        "WP",
                        "WP",
                        "BN",
                        "",
                        "",
                        "WQ",
                        "",
                        ""});
            table6.AddRow(new string[] {
                        "WR",
                        "",
                        "WN",
                        "WK",
                        "",
                        "",
                        "WR",
                        ""});
#line 285
 testRunner.Then("I expect the current board to contain the following", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Load match should load famous game Byrne V Fischer 1956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Match")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        public virtual void LoadMatchShouldLoadFamousGameByrneVFischer1956()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Load match should load famous game Byrne V Fischer 1956", ((string[])(null)));
#line 296
this.ScenarioSetup(scenarioInfo);
#line 16
this.FeatureBackground();
#line 297
 testRunner.Given("I have a match factory", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 298
 testRunner.When("I load the match \'byrne_fischer_1956.pgn\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 299
 testRunner.Then("I expect the gamestate to be \'BlackWin\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Source",
                        "Destination",
                        "Type"});
            table7.AddRow(new string[] {
                        "G1",
                        "F3",
                        "Move"});
            table7.AddRow(new string[] {
                        "G8",
                        "F6",
                        "Move"});
            table7.AddRow(new string[] {
                        "C2",
                        "C4",
                        "Move"});
            table7.AddRow(new string[] {
                        "G7",
                        "G6",
                        "Move"});
            table7.AddRow(new string[] {
                        "B1",
                        "C3",
                        "Move"});
            table7.AddRow(new string[] {
                        "F8",
                        "G7",
                        "Move"});
            table7.AddRow(new string[] {
                        "D2",
                        "D4",
                        "Move"});
            table7.AddRow(new string[] {
                        "E8",
                        "G8",
                        "CastleKingside"});
            table7.AddRow(new string[] {
                        "C1",
                        "F4",
                        "Move"});
            table7.AddRow(new string[] {
                        "D7",
                        "D5",
                        "Move"});
            table7.AddRow(new string[] {
                        "D1",
                        "B3",
                        "Move"});
            table7.AddRow(new string[] {
                        "D5",
                        "C4",
                        "CapturePawn"});
            table7.AddRow(new string[] {
                        "B3",
                        "C4",
                        "CapturePawn"});
            table7.AddRow(new string[] {
                        "C7",
                        "C6",
                        "Move"});
            table7.AddRow(new string[] {
                        "E2",
                        "E4",
                        "Move"});
            table7.AddRow(new string[] {
                        "B8",
                        "D7",
                        "Move"});
            table7.AddRow(new string[] {
                        "A1",
                        "D1",
                        "Move"});
            table7.AddRow(new string[] {
                        "D7",
                        "B6",
                        "Move"});
            table7.AddRow(new string[] {
                        "C4",
                        "C5",
                        "Move"});
            table7.AddRow(new string[] {
                        "C8",
                        "G4",
                        "Move"});
            table7.AddRow(new string[] {
                        "F4",
                        "G5",
                        "Move"});
            table7.AddRow(new string[] {
                        "B6",
                        "A4",
                        "Move"});
            table7.AddRow(new string[] {
                        "C5",
                        "A3",
                        "Move"});
            table7.AddRow(new string[] {
                        "A4",
                        "C3",
                        "CaptureKnight"});
            table7.AddRow(new string[] {
                        "B2",
                        "C3",
                        "CaptureKnight"});
            table7.AddRow(new string[] {
                        "F6",
                        "E4",
                        "CapturePawn"});
            table7.AddRow(new string[] {
                        "G5",
                        "E7",
                        "CapturePawn"});
            table7.AddRow(new string[] {
                        "D8",
                        "B6",
                        "Move"});
            table7.AddRow(new string[] {
                        "F1",
                        "C4",
                        "Move"});
            table7.AddRow(new string[] {
                        "E4",
                        "C3",
                        "CapturePawn"});
            table7.AddRow(new string[] {
                        "E7",
                        "C5",
                        "Move"});
            table7.AddRow(new string[] {
                        "F8",
                        "E8",
                        "Move"});
            table7.AddRow(new string[] {
                        "E1",
                        "F1",
                        "Move"});
            table7.AddRow(new string[] {
                        "G4",
                        "E6",
                        "Move"});
            table7.AddRow(new string[] {
                        "C5",
                        "B6",
                        "CaptureQueen"});
            table7.AddRow(new string[] {
                        "E6",
                        "C4",
                        "CaptureBishop"});
            table7.AddRow(new string[] {
                        "F1",
                        "G1",
                        "Move"});
            table7.AddRow(new string[] {
                        "C3",
                        "E2",
                        "Move"});
            table7.AddRow(new string[] {
                        "G1",
                        "F1",
                        "Move"});
            table7.AddRow(new string[] {
                        "E2",
                        "D4",
                        "CapturePawn"});
            table7.AddRow(new string[] {
                        "F1",
                        "G1",
                        "Move"});
            table7.AddRow(new string[] {
                        "D4",
                        "E2",
                        "Move"});
            table7.AddRow(new string[] {
                        "G1",
                        "F1",
                        "Move"});
            table7.AddRow(new string[] {
                        "E2",
                        "C3",
                        "Move"});
            table7.AddRow(new string[] {
                        "F1",
                        "G1",
                        "Move"});
            table7.AddRow(new string[] {
                        "A7",
                        "B6",
                        "CaptureBishop"});
            table7.AddRow(new string[] {
                        "A3",
                        "B4",
                        "Move"});
            table7.AddRow(new string[] {
                        "A8",
                        "A4",
                        "Move"});
            table7.AddRow(new string[] {
                        "B4",
                        "B6",
                        "CapturePawn"});
            table7.AddRow(new string[] {
                        "C3",
                        "D1",
                        "CaptureRook"});
            table7.AddRow(new string[] {
                        "H2",
                        "H3",
                        "Move"});
            table7.AddRow(new string[] {
                        "A4",
                        "A2",
                        "CapturePawn"});
            table7.AddRow(new string[] {
                        "G1",
                        "H2",
                        "Move"});
            table7.AddRow(new string[] {
                        "D1",
                        "F2",
                        "CapturePawn"});
            table7.AddRow(new string[] {
                        "H1",
                        "E1",
                        "Move"});
            table7.AddRow(new string[] {
                        "E8",
                        "E1",
                        "CaptureRook"});
            table7.AddRow(new string[] {
                        "B6",
                        "D8",
                        "Move"});
            table7.AddRow(new string[] {
                        "G7",
                        "F8",
                        "Move"});
            table7.AddRow(new string[] {
                        "F3",
                        "E1",
                        "CaptureRook"});
            table7.AddRow(new string[] {
                        "C4",
                        "D5",
                        "Move"});
            table7.AddRow(new string[] {
                        "E1",
                        "F3",
                        "Move"});
            table7.AddRow(new string[] {
                        "F2",
                        "E4",
                        "Move"});
            table7.AddRow(new string[] {
                        "D8",
                        "B8",
                        "Move"});
            table7.AddRow(new string[] {
                        "B7",
                        "B5",
                        "Move"});
            table7.AddRow(new string[] {
                        "H3",
                        "H4",
                        "Move"});
            table7.AddRow(new string[] {
                        "H7",
                        "H5",
                        "Move"});
            table7.AddRow(new string[] {
                        "F3",
                        "E5",
                        "Move"});
            table7.AddRow(new string[] {
                        "G8",
                        "G7",
                        "Move"});
            table7.AddRow(new string[] {
                        "H2",
                        "G1",
                        "Move"});
            table7.AddRow(new string[] {
                        "F8",
                        "C5",
                        "Move"});
            table7.AddRow(new string[] {
                        "G1",
                        "F1",
                        "Move"});
            table7.AddRow(new string[] {
                        "E4",
                        "G3",
                        "Move"});
            table7.AddRow(new string[] {
                        "F1",
                        "E1",
                        "Move"});
            table7.AddRow(new string[] {
                        "C5",
                        "B4",
                        "Move"});
            table7.AddRow(new string[] {
                        "E1",
                        "D1",
                        "Move"});
            table7.AddRow(new string[] {
                        "D5",
                        "B3",
                        "Move"});
            table7.AddRow(new string[] {
                        "D1",
                        "C1",
                        "Move"});
            table7.AddRow(new string[] {
                        "G3",
                        "E2",
                        "Move"});
            table7.AddRow(new string[] {
                        "C1",
                        "B1",
                        "Move"});
            table7.AddRow(new string[] {
                        "E2",
                        "C3",
                        "Move"});
            table7.AddRow(new string[] {
                        "B1",
                        "C1",
                        "Move"});
            table7.AddRow(new string[] {
                        "A2",
                        "C2",
                        "Move"});
#line 300
 testRunner.Then("I expect the following move history", ((string)(null)), table7, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "A",
                        "B",
                        "C",
                        "D",
                        "E",
                        "F",
                        "G",
                        "H"});
            table8.AddRow(new string[] {
                        "",
                        "WQ",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table8.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "BP",
                        "BK",
                        ""});
            table8.AddRow(new string[] {
                        "",
                        "",
                        "BP",
                        "",
                        "",
                        "",
                        "BP",
                        ""});
            table8.AddRow(new string[] {
                        "",
                        "BP",
                        "",
                        "",
                        "WN",
                        "",
                        "",
                        "BP"});
            table8.AddRow(new string[] {
                        "",
                        "BB",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "WP"});
            table8.AddRow(new string[] {
                        "",
                        "BB",
                        "BN",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table8.AddRow(new string[] {
                        "",
                        "",
                        "BR",
                        "",
                        "",
                        "",
                        "WP",
                        ""});
            table8.AddRow(new string[] {
                        "",
                        "",
                        "WK",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 384
 testRunner.Then("I expect the current board to contain the following", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Load match should load famous game Morphy Duke Karl Count Isouard 1858")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Match")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        public virtual void LoadMatchShouldLoadFamousGameMorphyDukeKarlCountIsouard1858()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Load match should load famous game Morphy Duke Karl Count Isouard 1858", ((string[])(null)));
#line 395
this.ScenarioSetup(scenarioInfo);
#line 16
this.FeatureBackground();
#line 396
 testRunner.Given("I have a match factory", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 397
 testRunner.When("I load the match \'morphy_duke_karl_count_isouard_1858.pgn\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 398
 testRunner.Then("I expect the gamestate to be \'WhiteWin\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Source",
                        "Destination",
                        "Type"});
            table9.AddRow(new string[] {
                        "E2",
                        "E4",
                        "Move"});
            table9.AddRow(new string[] {
                        "E7",
                        "E5",
                        "Move"});
            table9.AddRow(new string[] {
                        "G1",
                        "F3",
                        "Move"});
            table9.AddRow(new string[] {
                        "D7",
                        "D6",
                        "Move"});
            table9.AddRow(new string[] {
                        "D2",
                        "D4",
                        "Move"});
            table9.AddRow(new string[] {
                        "C8",
                        "G4",
                        "Move"});
            table9.AddRow(new string[] {
                        "D4",
                        "E5",
                        "CapturePawn"});
            table9.AddRow(new string[] {
                        "G4",
                        "F3",
                        "CaptureKnight"});
            table9.AddRow(new string[] {
                        "D1",
                        "F3",
                        "CaptureBishop"});
            table9.AddRow(new string[] {
                        "D6",
                        "E5",
                        "CapturePawn"});
            table9.AddRow(new string[] {
                        "F1",
                        "C4",
                        "Move"});
            table9.AddRow(new string[] {
                        "G8",
                        "F6",
                        "Move"});
            table9.AddRow(new string[] {
                        "F3",
                        "B3",
                        "Move"});
            table9.AddRow(new string[] {
                        "D8",
                        "E7",
                        "Move"});
            table9.AddRow(new string[] {
                        "B1",
                        "C3",
                        "Move"});
            table9.AddRow(new string[] {
                        "C7",
                        "C6",
                        "Move"});
            table9.AddRow(new string[] {
                        "C1",
                        "G5",
                        "Move"});
            table9.AddRow(new string[] {
                        "B7",
                        "B5",
                        "Move"});
            table9.AddRow(new string[] {
                        "C3",
                        "B5",
                        "CapturePawn"});
            table9.AddRow(new string[] {
                        "C6",
                        "B5",
                        "CaptureKnight"});
            table9.AddRow(new string[] {
                        "C4",
                        "B5",
                        "CapturePawn"});
            table9.AddRow(new string[] {
                        "B8",
                        "D7",
                        "Move"});
            table9.AddRow(new string[] {
                        "E1",
                        "C1",
                        "CastleQueenside"});
            table9.AddRow(new string[] {
                        "A8",
                        "D8",
                        "Move"});
            table9.AddRow(new string[] {
                        "D1",
                        "D7",
                        "CaptureKnight"});
            table9.AddRow(new string[] {
                        "D8",
                        "D7",
                        "CaptureRook"});
            table9.AddRow(new string[] {
                        "H1",
                        "D1",
                        "Move"});
            table9.AddRow(new string[] {
                        "E7",
                        "E6",
                        "Move"});
            table9.AddRow(new string[] {
                        "B5",
                        "D7",
                        "CaptureRook"});
            table9.AddRow(new string[] {
                        "F6",
                        "D7",
                        "CaptureBishop"});
            table9.AddRow(new string[] {
                        "B3",
                        "B8",
                        "Move"});
            table9.AddRow(new string[] {
                        "D7",
                        "B8",
                        "CaptureQueen"});
            table9.AddRow(new string[] {
                        "D1",
                        "D8",
                        "Move"});
#line 399
 testRunner.Then("I expect the following move history", ((string)(null)), table9, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "A",
                        "B",
                        "C",
                        "D",
                        "E",
                        "F",
                        "G",
                        "H"});
            table10.AddRow(new string[] {
                        "",
                        "BN",
                        "",
                        "WR",
                        "BK",
                        "BB",
                        "",
                        "BR"});
            table10.AddRow(new string[] {
                        "BP",
                        "",
                        "",
                        "",
                        "",
                        "BP",
                        "BP",
                        "BP"});
            table10.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "BQ",
                        "",
                        "",
                        ""});
            table10.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "BP",
                        "",
                        "WB",
                        ""});
            table10.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "WP",
                        "",
                        "",
                        ""});
            table10.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table10.AddRow(new string[] {
                        "WP",
                        "WP",
                        "WP",
                        "",
                        "",
                        "WP",
                        "WP",
                        "WP"});
            table10.AddRow(new string[] {
                        "",
                        "",
                        "WK",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 434
 testRunner.Then("I expect the current board to contain the following", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Load match should load game with au passant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Match")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Unit")]
        public virtual void LoadMatchShouldLoadGameWithAuPassant()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Load match should load game with au passant", ((string[])(null)));
#line 445
this.ScenarioSetup(scenarioInfo);
#line 16
this.FeatureBackground();
#line 446
 testRunner.Given("I have a match factory", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 447
 testRunner.When("I load the match \'nobody_has_aupassant.pgn\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 448
 testRunner.Then("I expect the gamestate to be \'WhiteWin\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Source",
                        "Destination",
                        "Type"});
            table11.AddRow(new string[] {
                        "E2",
                        "E4",
                        "Move"});
            table11.AddRow(new string[] {
                        "G8",
                        "F6",
                        "Move"});
            table11.AddRow(new string[] {
                        "E4",
                        "E5",
                        "Move"});
            table11.AddRow(new string[] {
                        "F6",
                        "E4",
                        "Move"});
            table11.AddRow(new string[] {
                        "D2",
                        "D3",
                        "Move"});
            table11.AddRow(new string[] {
                        "E4",
                        "C5",
                        "Move"});
            table11.AddRow(new string[] {
                        "D3",
                        "D4",
                        "Move"});
            table11.AddRow(new string[] {
                        "C5",
                        "E4",
                        "Move"});
            table11.AddRow(new string[] {
                        "D1",
                        "D3",
                        "Move"});
            table11.AddRow(new string[] {
                        "D7",
                        "D5",
                        "Move"});
            table11.AddRow(new string[] {
                        "E5",
                        "D6",
                        "AuPassant"});
            table11.AddRow(new string[] {
                        "E4",
                        "D6",
                        "CapturePawn"});
            table11.AddRow(new string[] {
                        "G1",
                        "F3",
                        "Move"});
            table11.AddRow(new string[] {
                        "B7",
                        "B5",
                        "Move"});
            table11.AddRow(new string[] {
                        "C1",
                        "F4",
                        "Move"});
            table11.AddRow(new string[] {
                        "E7",
                        "E5",
                        "Move"});
            table11.AddRow(new string[] {
                        "F4",
                        "E5",
                        "CapturePawn"});
            table11.AddRow(new string[] {
                        "C8",
                        "F5",
                        "Move"});
            table11.AddRow(new string[] {
                        "D3",
                        "B3",
                        "Move"});
            table11.AddRow(new string[] {
                        "B8",
                        "C6",
                        "Move"});
            table11.AddRow(new string[] {
                        "F1",
                        "B5",
                        "CapturePawn"});
            table11.AddRow(new string[] {
                        "D8",
                        "D7",
                        "Move"});
            table11.AddRow(new string[] {
                        "E1",
                        "G1",
                        "CastleKingside"});
            table11.AddRow(new string[] {
                        "D6",
                        "E4",
                        "Move"});
            table11.AddRow(new string[] {
                        "B1",
                        "C3",
                        "Move"});
            table11.AddRow(new string[] {
                        "A7",
                        "A6",
                        "Move"});
            table11.AddRow(new string[] {
                        "B5",
                        "A4",
                        "Move"});
            table11.AddRow(new string[] {
                        "F5",
                        "E6",
                        "Move"});
            table11.AddRow(new string[] {
                        "D4",
                        "D5",
                        "Move"});
            table11.AddRow(new string[] {
                        "E6",
                        "F5",
                        "Move"});
            table11.AddRow(new string[] {
                        "A4",
                        "C6",
                        "CaptureKnight"});
            table11.AddRow(new string[] {
                        "D7",
                        "C6",
                        "CaptureBishop"});
            table11.AddRow(new string[] {
                        "D5",
                        "C6",
                        "CaptureQueen"});
            table11.AddRow(new string[] {
                        "F8",
                        "C5",
                        "Move"});
            table11.AddRow(new string[] {
                        "E5",
                        "G7",
                        "CapturePawn"});
            table11.AddRow(new string[] {
                        "H8",
                        "G8",
                        "Move"});
            table11.AddRow(new string[] {
                        "F3",
                        "E5",
                        "Move"});
            table11.AddRow(new string[] {
                        "G8",
                        "G7",
                        "CaptureBishop"});
            table11.AddRow(new string[] {
                        "C3",
                        "E4",
                        "CaptureKnight"});
            table11.AddRow(new string[] {
                        "F5",
                        "E4",
                        "CaptureKnight"});
            table11.AddRow(new string[] {
                        "G2",
                        "G3",
                        "Move"});
            table11.AddRow(new string[] {
                        "F7",
                        "F5",
                        "Move"});
            table11.AddRow(new string[] {
                        "A1",
                        "D1",
                        "Move"});
            table11.AddRow(new string[] {
                        "E4",
                        "F3",
                        "Move"});
            table11.AddRow(new string[] {
                        "D1",
                        "D7",
                        "Move"});
            table11.AddRow(new string[] {
                        "A8",
                        "D8",
                        "Move"});
            table11.AddRow(new string[] {
                        "D7",
                        "G7",
                        "CaptureRook"});
            table11.AddRow(new string[] {
                        "D8",
                        "D4",
                        "Move"});
            table11.AddRow(new string[] {
                        "B3",
                        "F7",
                        "Move"});
            table11.AddRow(new string[] {
                        "E8",
                        "D8",
                        "Move"});
            table11.AddRow(new string[] {
                        "F7",
                        "G8",
                        "Move"});
            table11.AddRow(new string[] {
                        "C5",
                        "F8",
                        "Move"});
            table11.AddRow(new string[] {
                        "G8",
                        "F8",
                        "CaptureBishop"});
#line 449
 testRunner.Then("I expect the following move history", ((string)(null)), table11, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "A",
                        "B",
                        "C",
                        "D",
                        "E",
                        "F",
                        "G",
                        "H"});
            table12.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "BK",
                        "",
                        "WQ",
                        "",
                        ""});
            table12.AddRow(new string[] {
                        "",
                        "",
                        "BP",
                        "",
                        "",
                        "",
                        "WR",
                        "BP"});
            table12.AddRow(new string[] {
                        "BP",
                        "",
                        "WP",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table12.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "WN",
                        "BP",
                        "",
                        ""});
            table12.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "BR",
                        "",
                        "",
                        "",
                        ""});
            table12.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "BB",
                        "WP",
                        ""});
            table12.AddRow(new string[] {
                        "WP",
                        "WP",
                        "WP",
                        "",
                        "",
                        "WP",
                        "",
                        "WP"});
            table12.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "WR",
                        "WK",
                        ""});
#line 504
 testRunner.Then("I expect the current board to contain the following", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
